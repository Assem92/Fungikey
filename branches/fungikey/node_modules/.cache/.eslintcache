[{"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\index.js":"1","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\reportWebVitals.js":"3","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\App.jsx":"4","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoTubes.jsx":"5","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\IdentificationPics.jsx":"6","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoLames.jsx":"7","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\Identification.jsx":"8","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoAutre.jsx":"9","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\CouleurSpore.jsx":"10","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoExterne.jsx":"11","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoInterne.jsx":"12","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Home\\Home.jsx":"13","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Conseils\\Conseils.jsx":"14","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParFamille\\Jeu1.jsx":"15","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeu2\\Incorrect.jsx":"16","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeu2\\Jeu2.jsx":"17","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeu2\\Correct.jsx":"18","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeux\\Jeux.jsx":"19","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\IdentificatorMain.jsx":"20","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Recette\\RecetteCard.jsx":"21","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\IdentificatorComp.jsx":"22","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Recette\\Recette.jsx":"23","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParChampi\\Jeu3.jsx":"24","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Maps\\GoogleMaps.jsx":"25","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\Sidebar.jsx":"26","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeux\\Sidebar.jsx":"27","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\TableIdentificatorComp.jsx":"28","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParFamille\\Card.jsx":"29","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParChampi\\Card.jsx":"30","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\TableIdentificatorMain.jsx":"31","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\Checkbox.jsx":"32","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\columnsComp.jsx":"33","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\columnsMain.jsx":"34","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\SearchColumnFilter.jsx":"35","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\SelectColumnFilter.jsx":"36","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Maps\\Popup.jsx":"37","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Forum\\Forum.jsx":"38","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Forum\\AddPostForm.jsx":"39","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\utilities\\NavBar\\CustomNavbar.jsx":"40","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Shop\\Shop.jsx":"41"},{"size":1144,"mtime":1675083886329,"results":"42","hashOfConfig":"43"},{"size":5201,"mtime":1675083886345,"results":"44","hashOfConfig":"43"},{"size":377,"mtime":1675083886345,"results":"45","hashOfConfig":"43"},{"size":3188,"mtime":1679186069624,"results":"46","hashOfConfig":"43"},{"size":2749,"mtime":1675083886329,"results":"47","hashOfConfig":"43"},{"size":1864,"mtime":1675083886329,"results":"48","hashOfConfig":"43"},{"size":5042,"mtime":1675083886329,"results":"49","hashOfConfig":"43"},{"size":983,"mtime":1675083886329,"results":"50","hashOfConfig":"43"},{"size":1890,"mtime":1675083886313,"results":"51","hashOfConfig":"43"},{"size":14465,"mtime":1675083886313,"results":"52","hashOfConfig":"43"},{"size":2541,"mtime":1675083886313,"results":"53","hashOfConfig":"43"},{"size":1954,"mtime":1675083886313,"results":"54","hashOfConfig":"43"},{"size":4009,"mtime":1679233828848,"results":"55","hashOfConfig":"43"},{"size":4148,"mtime":1675083886313,"results":"56","hashOfConfig":"43"},{"size":854,"mtime":1675083886329,"results":"57","hashOfConfig":"43"},{"size":657,"mtime":1675083886329,"results":"58","hashOfConfig":"43"},{"size":7226,"mtime":1675083886329,"results":"59","hashOfConfig":"43"},{"size":587,"mtime":1675083886329,"results":"60","hashOfConfig":"43"},{"size":1264,"mtime":1675083886329,"results":"61","hashOfConfig":"43"},{"size":619,"mtime":1675083886329,"results":"62","hashOfConfig":"43"},{"size":1626,"mtime":1675083845836,"results":"63","hashOfConfig":"43"},{"size":664,"mtime":1675083886329,"results":"64","hashOfConfig":"43"},{"size":2338,"mtime":1678019193705,"results":"65","hashOfConfig":"43"},{"size":854,"mtime":1675083886329,"results":"66","hashOfConfig":"43"},{"size":7367,"mtime":1676806838476,"results":"67","hashOfConfig":"43"},{"size":2278,"mtime":1675083886329,"results":"68","hashOfConfig":"43"},{"size":1370,"mtime":1675083886329,"results":"69","hashOfConfig":"43"},{"size":3590,"mtime":1675083886329,"results":"70","hashOfConfig":"43"},{"size":4445,"mtime":1675083886329,"results":"71","hashOfConfig":"43"},{"size":2969,"mtime":1675083886329,"results":"72","hashOfConfig":"43"},{"size":3509,"mtime":1675083886329,"results":"73","hashOfConfig":"43"},{"size":649,"mtime":1675083886329,"results":"74","hashOfConfig":"43"},{"size":1624,"mtime":1675083886329,"results":"75","hashOfConfig":"43"},{"size":1331,"mtime":1675083886329,"results":"76","hashOfConfig":"43"},{"size":501,"mtime":1675083886329,"results":"77","hashOfConfig":"43"},{"size":1321,"mtime":1675083886329,"results":"78","hashOfConfig":"43"},{"size":790,"mtime":1676766228719,"results":"79","hashOfConfig":"43"},{"size":7833,"mtime":1678018794146,"results":"80","hashOfConfig":"43"},{"size":2994,"mtime":1678018583060,"results":"81","hashOfConfig":"43"},{"size":563,"mtime":1678019261225,"results":"82","hashOfConfig":"43"},{"size":3378,"mtime":1679220129904,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"njxveo",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"127","usedDeprecatedRules":"87"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"87"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"87"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"87"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"87"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"87"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"87"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"87"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"87"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\index.js",[],[],["219","220"],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\serviceWorkerRegistration.js",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\reportWebVitals.js",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\App.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoTubes.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\IdentificationPics.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoLames.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\Identification.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoAutre.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\CouleurSpore.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoExterne.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\HymenoInterne.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Home\\Home.jsx",["221"],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Conseils\\Conseils.jsx",["222","223","224","225","226","227","228"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport JSONDATA from \"../../assets/champi.json\";\r\nimport { useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport * as ioCons from \"react-icons/io\";\r\n\r\n/**\r\n * @returns La partie \"Conseil\" composée de fiches de champignons avec description, et conseils de préparation. Les fiches sont générées à parti de la base de données json des champignons\r\n * @constant searchTerm Constante {string} pour le mot écris dans la barre de recherche avec useState\r\n * @constant setSearchTerm Constante {string} pour le mot écris dans la barre de recherche avec useState\r\n */\r\nexport default function Conseils() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [dataa, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(\"/api/champi\")\r\n      .then((res) => res.json())\r\n      .then((dataa) => setData(dataa));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"conseil-bar\">\r\n        <span className=\"conseil-title\">Conseils Champiignons</span>\r\n      </div>\r\n\r\n      <div className=\"container-identification\">\r\n        <Link to=\"/\">\r\n          <button className=\"button-retour\">Retour</button>\r\n        </Link>\r\n\r\n        <div>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"--Select--\"\r\n            onChange={(event) => {\r\n              setSearchTerm(event.target.value);\r\n            }}\r\n          ></input>\r\n        </div>\r\n\r\n        <p className=\"titre\">Liste des champignons</p>\r\n\r\n        {dataa\r\n          .filter((val) => {\r\n            if (searchTerm === \"\") {\r\n              return val;\r\n            } else if (\r\n              val.nom\r\n                .toLowerCase()\r\n                .normalize(\"NFD\")\r\n                .replace(/[\\u0300-\\u036f]/g, \"\")\r\n                .includes(searchTerm.toLowerCase()) ||\r\n              val.nomlatin.toLowerCase().includes(searchTerm.toLowerCase())\r\n            ) {\r\n              return val;\r\n            }\r\n          })\r\n          .map(\r\n            ({\r\n              nom,\r\n              nomlatin,\r\n              toxic,\r\n              famille,\r\n              image,\r\n              conseils,\r\n              comestible,\r\n              description,\r\n            }) => (\r\n              <div>\r\n                <Card style={{ overflow: \"auto\", width: \"100%\" }}>\r\n                  <Card.Img variant=\"top\" src={image} />\r\n\r\n                  <Card.Body>\r\n                    <Card.Title className=\"card\">{nom}</Card.Title>\r\n\r\n                    <Card.Text>\r\n                      <p className=\"latin\">{nomlatin}</p>\r\n\r\n                      <p>Famille: {famille} </p>\r\n\r\n                      <p>Toxique: {toxic ? \"Oui\" : \"Non\"}</p>\r\n\r\n                      <p>Comestible:{comestible ? \"Oui\" : \"Non\"}</p>\r\n\r\n                      <p className=\"description\"> Description: {description}</p>\r\n\r\n                      <p>\r\n                        {toxic\r\n                          ? \"\"\r\n                          : \"Conseils de cueillette et de préparation: \" +\r\n                            conseils}\r\n                      </p>\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n                <br />\r\n              </div>\r\n            )\r\n          )}\r\n        <div>\r\n          <p>Sources : </p>\r\n\r\n          <a\r\n            href=\"https://www.guidedeschampignons.com/tous-les-champignons/\"\r\n            target=\"_blank\"\r\n          >\r\n            Le guide des champignons\r\n          </a>\r\n          <br />\r\n          <a\r\n            href=\"https://fr.vikidia.org/wiki/Cat%C3%A9gorie:Champignon\"\r\n            target=\"_blank\"\r\n          >\r\n            Vikidia\r\n          </a>\r\n          <br />\r\n          <a\r\n            href=\"https://www.chasseursdechampignons.com/blog/comment-trouver-des-champignons/\"\r\n            target=\"_blank\"\r\n          >\r\n            Chasseurs des champignons\r\n          </a>\r\n          <br />\r\n          <a href=\"https://www.dinosoria.com/champignon.html\" target=\"_blank\">\r\n            Dinosoria\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParFamille\\Jeu1.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeu2\\Incorrect.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeu2\\Jeu2.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeu2\\Correct.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeux\\Jeux.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\IdentificatorMain.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Recette\\RecetteCard.jsx",["229","230","231","232","233","234"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  Container,\r\n  Offcanvas,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\n/**\r\n * @returns Une page principale de jeux\r\n */\r\nexport default function RecetteCard() {\r\n  let params = useParams();\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const [dataa, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(\"/api/recette/\" + params.id)\r\n      .then((res) => res.json())\r\n      .then((dataa) => setData(dataa));\r\n  }, []);\r\n\r\n  console.log(dataa);\r\n\r\n  return (\r\n    <>\r\n      <Navbar className=\"color-nav\" expand={false}>\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/Recette\">\r\n            <img\r\n              alt=\"\"\r\n              src=\"/images/icons/60.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            <span className=\"sidebar-title\">Recettes</span>\r\n          </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n      <div className=\"container-identification\">\r\n        <h2 className=\"h2-identification\">{dataa?.name}</h2>\r\n        <br></br>\r\n        <h5>ingredients</h5>\r\n\r\n        <ul>\r\n          {dataa?.ingredients?.map((x) => (\r\n            <li>{x}</li>\r\n          ))}\r\n        </ul>\r\n        <h5>instructions</h5>\r\n        <p>{dataa?.instructions}</p>\r\n\r\n        <Link to=\"/Recette\">\r\n          <button className=\"button-retour\">Retour</button>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\IdentificatorComp.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Recette\\Recette.jsx",["235","236","237","238"],[],"import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomNavbar from \"../utilities/NavBar/CustomNavbar\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\n\r\n//import recetteList from \"../../assets/recette.json\";\r\n\r\nimport RestaurantIcon from \"@mui/icons-material/Restaurant\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst Demo = styled(\"div\")(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n}));\r\n\r\nexport default function InteractiveList() {\r\n  const navigate = useNavigate();\r\n\r\n  const [recetteList, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(\"/api/recette/\")\r\n      .then((res) => res.json())\r\n      .then((recetteList) => setData(recetteList));\r\n  }, []);\r\n\r\n  console.log(recetteList);\r\n\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <CustomNavbar title=\"Recettes\" link=\"/Recette\" />\r\n\r\n      <div className=\"container-identification\">\r\n        <List dense={dense}>\r\n          {recetteList?.map((x) => (\r\n            <ListItem\r\n              key={x.id}\r\n              secondaryAction={\r\n                <IconButton edge=\"end\" aria-label=\"delete\">\r\n                  <ArrowForwardIosIcon\r\n                    onClick={() => navigate(\"/Recette/\" + x.id)}\r\n                  />\r\n                </IconButton>\r\n              }\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <RestaurantIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={x.name}\r\n                secondary={secondary ? \"Secondary text\" : null}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Link to=\"/\">\r\n          <button className=\"button-retour\">Retour</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParChampi\\Jeu3.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Maps\\GoogleMaps.jsx",["239","240","241"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from \"google-maps-react\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\nimport \"./GoogleMaps.css\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Popover from \"@mui/material/Popover\";\r\n//import { Box } from \"@mui/system\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Popup from \"./Popup\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst fabStyle = {\r\n  position: \"absolute\",\r\n  bottom: 16,\r\n  right: 16,\r\n};\r\n\r\nexport function GoogleMaps({ google, locations }) {\r\n  const [userLocation, setUserLocation] = useState({});\r\n  const [points, setPoints] = useState([]);\r\n  const [locationFetched, setLocationFetched] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  const [showInfoWindow, setInfoWindowFlag] = useState(false);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  useEffect(() => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setUserLocation({ lat: latitude, lng: longitude });\r\n          setLocationFetched(true);\r\n        },\r\n        (error) => console.log(error)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (locationFetched) {\r\n      fetch(`/api/closest-points/${userLocation.lat}/${userLocation.lng}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setPoints(data);\r\n        })\r\n        .catch((error) => console.log(\"fffffff\" + error));\r\n    }\r\n  }, [locationFetched]);\r\n\r\n  console.log(userLocation);\r\n  console.log(`/api/closest-points/${userLocation?.lat}/${userLocation?.lng}`);\r\n\r\n  console.log(points);\r\n\r\n  //get champi types\r\n  const [champiTypes, setChampiTypes] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(\"\");\r\n  const handleSelect = (event) => {\r\n    setSelectedOption(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/champi-types\")\r\n      .then((res) => res.json())\r\n      .then((data) => setChampiTypes(data))\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleSubmit = () => {\r\n    fetch(\"/api/location\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        latitude: userLocation.lat,\r\n        longitude: userLocation.lng,\r\n        type: selectedOption,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Location saved:\", data);\r\n        handleClose();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error saving location:\", error);\r\n      });\r\n  };\r\n\r\n  const onMarkerClick = (marker) => {\r\n    setSelectedMarker(marker);\r\n    setInfoWindowFlag(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"color-nav\" expand={false}>\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/map\">\r\n            <img\r\n              alt=\"\"\r\n              src=\"/images/icons/60.png\"\r\n              width=\"30\"\r\n              height=\"30\"\r\n              className=\"d-inline-block align-top\"\r\n            />{\" \"}\r\n            <span className=\"sidebar-title\">Map</span>\r\n          </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <div>\r\n        <Map\r\n          className=\"map\"\r\n          google={google}\r\n          containerStyle={{\r\n            position: \"static\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n          style={mapStyles}\r\n          center={userLocation}\r\n          initialCenter={userLocation}\r\n          zoom={18}\r\n          disableDefaultUI={true}\r\n        >\r\n          {points?.length ?? 0\r\n            ? points?.map((point) => (\r\n                <Marker\r\n                  key={point.id}\r\n                  position={{\r\n                    lat: parseFloat(point?.latitude),\r\n                    lng: parseFloat(point?.longitude),\r\n                  }}\r\n                  icon={{\r\n                    url: \"/images/icons/mushroomIcon.svg\",\r\n                    scaledSize: new google.maps.Size(30, 30),\r\n                  }}\r\n                  onClick={() => onMarkerClick(point)}\r\n                />\r\n              ))\r\n            : null}\r\n\r\n          {selectedMarker && (\r\n            <InfoWindow\r\n              visible={showInfoWindow}\r\n              position={{\r\n                lat: parseFloat(selectedMarker.latitude),\r\n                lng: parseFloat(selectedMarker.longitude),\r\n              }}\r\n              onCloseClick={() => {\r\n                setInfoWindowFlag(false);\r\n                setSelectedMarker(null);\r\n              }}\r\n            >\r\n              <div>\r\n                <h4>Type: {selectedMarker?.type}</h4>\r\n                <p>Latitude: {selectedMarker?.latitude}</p>\r\n                <p>Longitude: {selectedMarker?.longitude}</p>\r\n              </div>\r\n            </InfoWindow>\r\n          )}\r\n\r\n          {userLocation.lat && (\r\n            <Marker\r\n              position={userLocation}\r\n              icon={{\r\n                url: \"/images/icons/UserLocationIcon.png\",\r\n                scaledSize: new google.maps.Size(50, 50),\r\n              }}\r\n            />\r\n          )}\r\n        </Map>\r\n      </div>\r\n      <Fab sx={fabStyle} color=\"primary\" aria-label=\"add\" onClick={handleClick}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Popover\r\n        open={Boolean(anchorEl)}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        transformOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\",\r\n        }}\r\n        anchorOrigin={{\r\n          vertical: \"center\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            p: 2,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography sx={{ fontWeight: \"bold\", color: \"green\" }}>\r\n            Vous avez trouvé un champignon !\r\n          </Typography>\r\n          <Typography>Latitude: {userLocation.lat}</Typography>\r\n          <Typography>Longitude: {userLocation.lng}</Typography>\r\n          <br />\r\n          <Typography>Choisir un type</Typography>\r\n\r\n          <Select\r\n            label=\"Choisir un type\"\r\n            value={selectedOption}\r\n            onChange={handleSelect}\r\n            sx={{ minWidth: \"20%\" }}\r\n          >\r\n            {champiTypes.map((type) => (\r\n              <MenuItem value={type} key={type}>\r\n                {type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          <br />\r\n          <Button variant=\"contained\" onClick={handleSubmit}>\r\n            Enregitrer\r\n          </Button>\r\n        </Box>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyDyHuTxfsAQIv8KRc4llJwR_-kEGUY4_bc\",\r\n})(GoogleMaps);\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\Sidebar.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Jeux\\Sidebar.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\TableIdentificatorComp.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParFamille\\Card.jsx",["242"],[],"import { useState, useMemo } from \"react\";\r\nimport * as data from \"../../assets/familleChampi.json\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\n/**\r\n * @returns Un petit jeu qui affiche une question, avec bouton de réponse et score\r\n * La question est générée en prenant une famille de champignons aléatoirement dans la base de données.\r\n */\r\n\r\nexport const CardMushroom = () => {\r\n  /**\r\n   * @constant show Pour afficher la réponse, useState\r\n   * @constant setShow Pour afficher la réponse, useState\r\n   * @constant handleClose Change \"setShow\" en false pour fermer la réponse\r\n   * @constant handleShow Change \"setShow\" en false pour afficher la réponse\r\n   */\r\n\r\n  //get data from api (i used one fake mushroom in the use state to get rid of undefined error)\r\n  const [FamilleChamiDATA, setData] = React.useState([\r\n    {\r\n      nom_famille: \"Gyroporus\",\r\n      type_champignon: \"chapeau\",\r\n      image: [\"images/Gyroporus.webp\"],\r\n      type_chapeau: {\r\n        hymenophores: \"tubes\",\r\n        couleur_spores: \"blanc, gris, rose\",\r\n        stipe: \"creux, cassant, rugueux\",\r\n        cuticule: \"seche\",\r\n      },\r\n    },\r\n  ]);\r\n  React.useEffect(() => {\r\n    fetch(\"/api/familleChampi\")\r\n      .then((res) => res.json())\r\n      .then((FamilleChamiDATA) => setData(FamilleChamiDATA));\r\n  }, []);\r\n  console.log(FamilleChamiDATA);\r\n  //\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  /**\r\n   * @function useMemo Afin que le champignon tiré ne change pas à chaque changement d'état/rafraîchissement des pages\r\n   * @constant randomMushroom un chapignon au hasard appartenant la base de données\r\n   * @constant mushrooms on importe la base données comme une constante (liste)\r\n   * @constant randomIndex une index au hasard de la liste de champignons\r\n   * @returns un champignon au hasard\r\n   */\r\n\r\n  const randomMushroom = useMemo(() => {\r\n    const mushrooms = FamilleChamiDATA;\r\n    const randomIndex = Math.floor(Math.random() * mushrooms.length);\r\n    return mushrooms[randomIndex];\r\n  }, [FamilleChamiDATA]);\r\n\r\n  /**\r\n   * @returns une carte/fiche contenant des indices sur le champignons à trouver, et un bouton de réponse qui montre la réponse dans une fenêtre modale\r\n   */\r\n  function getRandomMushroom() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-front\">\r\n          <p>A quel groupe correspond ces clés?</p>\r\n\r\n          <ul>\r\n            <li>Commence par: {randomMushroom.nom_famille[0]}</li>\r\n            <li>Type Champignon: {randomMushroom.type_champignon}</li>\r\n            <li>Hymenophores: {randomMushroom.type_chapeau.hymenophores}</li>\r\n            {randomMushroom.type_chapeau.type_lames ? (\r\n              <li>Type lames: {randomMushroom.type_chapeau.type_lames}</li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {randomMushroom.type_chapeau.couleur_spores ? (\r\n              <li>\r\n                Couleur spores: {randomMushroom.type_chapeau.couleur_spores}\r\n              </li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {randomMushroom.type_chapeau.stipe ? (\r\n              <li>Stipe: {randomMushroom.type_chapeau.stipe}</li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {randomMushroom.type_chapeau.trame ? (\r\n              <li>Trame: {randomMushroom.type_chapeau.trame}</li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {randomMushroom.type_chapeau.forme ? (\r\n              <li>Forme: {randomMushroom.type_chapeau.forme}</li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {randomMushroom.type_chapeau.cuticule ? (\r\n              <li>Forme: {randomMushroom.type_chapeau.cuticule}</li>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </ul>\r\n        </div>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Réponse</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"card-back\">\r\n              <p>La réponse est:</p>\r\n              <p>{randomMushroom.nom_famille}</p>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n        <button className=\"button-retour\" onClick={handleShow}>\r\n          Réponse\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <>{getRandomMushroom()}</>;\r\n};\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\JeuParChampi\\Card.jsx",["243"],[],"import { useState, useMemo } from \"react\";\r\nimport * as data from \"../../assets/champi.json\";\r\nimport { Modal, Card } from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\n/**\r\n\r\n * @returns Un petit jeu qui affiche une question, avec bouton de réponse et score\r\n * La question est générée en prenant une famille de champignons aléatoirement dans la base de données.\r\n */\r\n\r\nexport const CardMushroom = () => {\r\n  /**\r\n   * @constant show Pour afficher la réponse, useState\r\n   * @constant setShow Pour afficher la réponse, useState\r\n   * @constant handleClose Change \"setShow\" en false pour fermer la réponse\r\n   * @constant handleShow Change \"setShow\" en false pour afficher la réponse\r\n   */\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //get data\r\n  const [dataa, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(\"/api/champi\")\r\n      .then((res) => res.json())\r\n      .then((dataa) => setData(dataa));\r\n  }, []);\r\n  //\r\n\r\n  /**\r\n   * @function useMemo Afin que le champignon tiré ne change pas à chaque changement d'état/rafraîchissement des pages\r\n   * @constant randomMushroom un chapignon au hasard appartenant la base de données\r\n   * @constant mushrooms on importe la base données comme une constante (liste)\r\n   * @constant randomIndex une index au hasard de la liste de champignons\r\n   * @returns un champignon au hasard\r\n   */\r\n\r\n  const randomMushroom = useMemo(() => {\r\n    const mushrooms = data;\r\n    const randomIndex = Math.floor(Math.random() * mushrooms.length);\r\n    return mushrooms[randomIndex];\r\n  }, [dataa]);\r\n\r\n  /**\r\n   * @returns une carte/fiche contenant des indices sur le champignons à trouver, et un bouton de réponse qui montre la répons edans une fenêtre modale\r\n   */\r\n  function getRandomMushroom() {\r\n    return (\r\n      <>\r\n        <Card style={{ overflow: \"auto\", width: \"100%\" }}>\r\n          <Card.Img variant=\"top\" src={randomMushroom.image} />\r\n          <Card.Body>\r\n            <Card.Title> {randomMushroom.famille}</Card.Title>\r\n            <Card.Text>\r\n              <p>{randomMushroom.toxic ? \"Toxique: oui\" : \"\"}</p>\r\n              <p>{randomMushroom.comestible ? \"Comestible: oui\" : \"\"}</p>\r\n            </Card.Text>\r\n            <button className=\"button-retour\" onClick={handleShow}>\r\n              Réponse\r\n            </button>\r\n          </Card.Body>\r\n        </Card>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Réponse</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"card-back\">\r\n              <p>La réponse est:</p>\r\n              <p>{randomMushroom.nom}</p>\r\n              <p className=\"latin\">{randomMushroom.nomlatin}</p>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <>{getRandomMushroom()}</>;\r\n};\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\TableIdentificatorMain.jsx",["244"],[],"import React, { useMemo } from \"react\";\r\nimport { useTable, useFilters } from \"react-table\";\r\nimport { COLUMNS } from \"./columnsMain\";\r\nimport { Table, Form, Button, Container } from \"react-bootstrap\";\r\nimport { Checkbox } from \"./Checkbox\";\r\nimport { useState } from \"react\";\r\n\r\n/**\r\n * @returns le table identificator, qui permet de filtrer dynamiquement les champignons\r\n */\r\n\r\nexport const TableIdentificator = () => {\r\n  /**\r\n   * @constant columns memoization, on utilise les colonnes définies dans l'import\r\n   * @constant data memoization, on utilise les données (json) définies dans l'import\r\n   * useFilters: Afin d'utiliser les filtres dans React\r\n   */\r\n\r\n  //get data from api\r\n  const [FamilleChamiDATA, setData] = React.useState([]);\r\n  React.useEffect(() => {\r\n    fetch(\"/api/familleChampi\")\r\n      .then((res) => res.json())\r\n      .then((FamilleChamiDATA) => setData(FamilleChamiDATA));\r\n  }, []);\r\n  //\r\n\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => FamilleChamiDATA, [FamilleChamiDATA]);\r\n\r\n  /**\r\n   * @constant tableInstance: On utilise useTable de React-Table avec les colonnes et données déterminés plus haut,\r\n   * on utilise useFilters pour indiquer que le tableau sera filtrable\r\n   */\r\n  const tableInstance = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters\r\n  );\r\n\r\n  /**\r\n   * On prend les constantes nécessaires  (doc React Table) pour déterminer l'instance de la table\r\n   */\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    allColumns,\r\n    getToggleHideAllColumnsProps,\r\n    setAllFilters,\r\n  } = tableInstance;\r\n\r\n  /**\r\n   * @returns la table générée grâce aux colonnes indiquées et à la base de données.\r\n   * On utilise le Checkbox importé afin de faire apparaître le checkbox \"Tout afficher\"\r\n   */\r\n\r\n  return (\r\n    <>\r\n      <Container responsive>\r\n        <Form>\r\n          <Checkbox {...getToggleHideAllColumnsProps()} />\r\n        </Form>\r\n        {allColumns.map((column) => (\r\n          <div key={column.id}>\r\n            <label>\r\n              <Form.Check\r\n                className=\"mb-2\"\r\n                inline\r\n                type=\"switch\"\r\n                {...column.getToggleHiddenProps()}\r\n              />{\" \"}\r\n              {column.id}\r\n            </label>\r\n          </div>\r\n        ))}\r\n        <Button size=\"sm\" variant=\"dark\" onClick={() => setAllFilters([])}>\r\n          Reset\r\n        </Button>\r\n      </Container>\r\n\r\n      <br></br>\r\n\r\n      <Table responsive bordered striped {...getTableProps}>\r\n        <thead>\r\n          {headerGroups.map((headerGroups) => (\r\n            <tr {...headerGroups.getHeaderGroupProps()}>\r\n              {headerGroups.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\Checkbox.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\columnsComp.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\columnsMain.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\SearchColumnFilter.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Identification\\identificator\\SelectColumnFilter.jsx",["245"],[],"import React from \"react\";\r\n\r\n\r\n/**\r\n * \r\n * @param {string} column  une colonne  \r\n * @returns Un filtre type \"sélection\"\r\n * @constant filterValue la valeur à filtrer \r\n * @constant setFilter booléen pour savoir si l'ont filtre ou non \r\n */\r\nexport const SelectColumnFilter = ({ column }) => {\r\n    const {filterValue, setFilter,  preFilteredRows, id } = column\r\n\r\n    /**\r\n     * @constant options les options de sélection \r\n     * On traverse les valeurs pour chaque colonne et on élimine les valeurs en doubles ou nulles\r\n     * @return options possibles se trouvant dans la colonne donnée\r\n     */\r\n    const options = React.useMemo(() => {\r\n        const options = new Set()\r\n        preFilteredRows.forEach(row => {\r\n            if(!(row.values[id] == null || row.values[id] == \"\")){\r\n                options.add(row.values[id])\r\n            }\r\n          \r\n        })\r\n        return [...options.values()]\r\n      }, [id, preFilteredRows])\r\n      \r\n    return (\r\n        <select\r\n        value={filterValue}\r\n        onChange={e => {\r\n          setFilter(e.target.value || undefined)\r\n        }}\r\n        >\r\n        <option value=\"\">All</option>\r\n        {options.map((option, i) => (\r\n          <option key={i} value={option}>\r\n            {option}\r\n          </option>\r\n        ))}\r\n      </select>\r\n  )\r\n}","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Maps\\Popup.jsx",["246"],[],"import React, { useState } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nfunction Popup({ open, anchorEl, onClose, transformOrigin, anchorOrigin }) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Select value={value} onChange={handleChange}>\r\n        <MenuItem value=\"\">Select an option</MenuItem>\r\n        <MenuItem value=\"option1\">Option 1</MenuItem>\r\n        <MenuItem value=\"option2\">Option 2</MenuItem>\r\n        <MenuItem value=\"option3\">Option 3</MenuItem>\r\n      </Select>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Popup;\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Forum\\Forum.jsx",["247"],[],"import React, { useState, useEffect } from \"react\";\r\nimport AddPostForm from \"./AddPostForm\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Avatar,\r\n  Tooltip,\r\n  Chip,\r\n  Popover,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport PublicIcon from \"@mui/icons-material/Public\";\r\nimport SensorsIcon from \"@mui/icons-material/Sensors\";\r\nimport GroupIcon from \"@mui/icons-material/Group\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CustomNavbar from \"../utilities/NavBar/CustomNavbar\";\r\n\r\nconst fabStyle = {\r\n  position: \"fixed\",\r\n  bottom: 16,\r\n  right: 16,\r\n};\r\n\r\nexport default function Forum() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/posts\")\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts(data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  function addPost(post) {\r\n    fetch(\"/api/posts\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(post),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setPosts([...posts, data]))\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  function handleLike(post) {\r\n    fetch(`/api/posts/${post.id}/like`, {\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        setPosts((prevState) =>\r\n          prevState.map((prevPost) =>\r\n            prevPost.id === post.id ? data : prevPost\r\n          )\r\n        )\r\n      )\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  function handleDislike(post) {\r\n    fetch(`/api/posts/${post.id}/dislike`, {\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        setPosts((prevState) =>\r\n          prevState.map((prevPost) =>\r\n            prevPost.id === post.id ? data : prevPost\r\n          )\r\n        )\r\n      )\r\n      .catch((error) => console.error(error));\r\n  }\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"add-post-form-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <CustomNavbar title=\"Forum\" link=\"/Forum\" />\r\n      <Container>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <AddPostForm onAddPost={addPost} />\r\n        </Popover>\r\n        <Grid container spacing={2}>\r\n          {posts.map((post) => (\r\n            <Grid item xs={12} md={6} lg={4} key={post.id}>\r\n              <Paper\r\n                sx={{\r\n                  borderRadius: \"8px\",\r\n                  border: \"1px solid #ccc\",\r\n                  margin: \"8px\",\r\n                  padding: \"16px\",\r\n                  backgroundColor: \"#fff\",\r\n                }}\r\n              >\r\n                <Grid container alignItems=\"center\" spacing={2}>\r\n                  <Grid item>\r\n                    <Avatar\r\n                      alt={post.author}\r\n                      src={post.authorAvatar}\r\n                      sx={{ width: \"50px\", height: \"50px\" }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                      {post.author}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      gutterBottom\r\n                      sx={{ color: \"grey\", fontStyle: \"italic\" }}\r\n                    >\r\n                      {new Date(post.timestamp).toLocaleTimeString([], {\r\n                        hour: \"2-digit\",\r\n                        minute: \"2-digit\",\r\n                      })}{\" \"}\r\n                      {new Date(post.timestamp).toLocaleDateString([], {\r\n                        day: \"2-digit\",\r\n                        month: \"2-digit\",\r\n                        year: \"numeric\",\r\n                      })}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2} sx={{ textAlign: \"right\" }}>\r\n                    <Tooltip title={post.visibility}>\r\n                      <span>\r\n                        {post.visibility === \"public\" && (\r\n                          <PublicIcon\r\n                            style={{ color: \"grey\", fontSize: \"18px\" }}\r\n                          />\r\n                        )}\r\n                        {post.visibility === \"private\" && (\r\n                          <LockIcon\r\n                            style={{ color: \"grey\", fontSize: \"18px\" }}\r\n                          />\r\n                        )}\r\n                        {post.visibility === \"friends\" && (\r\n                          <GroupIcon\r\n                            style={{ color: \"grey\", fontSize: \"18px\" }}\r\n                          />\r\n                        )}\r\n                        {post.visibility === \"network\" && (\r\n                          <SensorsIcon\r\n                            style={{ color: \"grey\", fontSize: \"18px\" }}\r\n                          />\r\n                        )}\r\n                      </span>\r\n                    </Tooltip>\r\n                  </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n                  {post.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  {Array.isArray(post.tag) &&\r\n                    post.tag.map((tag, index) => (\r\n                      <Chip\r\n                        key={index}\r\n                        label={`#${tag}`}\r\n                        color=\"primary\"\r\n                        sx={{ marginLeft: 1, fontWeight: \"bold\" }}\r\n                      />\r\n                    ))}\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  {post.content.text}\r\n                </Typography>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                  <Tooltip title={`${post.stats.likes} likes`}>\r\n                    <Chip\r\n                      icon={<ThumbUpIcon />}\r\n                      label={post.stats.likes}\r\n                      color=\"success\"\r\n                      sx={{ marginRight: \"8px\", marginBottom: \"4px\" }}\r\n                      onClick={() => handleLike(post)}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title={`${post.stats.dislikes} dislikes`}>\r\n                    <Chip\r\n                      icon={<ThumbDownIcon />}\r\n                      label={post.stats.dislikes}\r\n                      color=\"error\"\r\n                      sx={{ marginBottom: \"4px\" }}\r\n                      onClick={() => handleDislike(post)}\r\n                    />\r\n                  </Tooltip>\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Tooltip title=\"Publier un poste\">\r\n          <Fab\r\n            sx={fabStyle}\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            onClick={handleClick}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Tooltip>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Forum\\AddPostForm.jsx",["248"],[],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\n\r\nexport default function AddPostForm({ onAddPost }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [visibility, setVisibility] = useState(\"public\");\r\n  const [tag, setTag] = useState(\"\");\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    const post = {\r\n      title,\r\n      content: { text },\r\n      author: author || \"not defined\",\r\n      visibility: visibility || \"not defined\",\r\n      tag: tag || \"not defined\",\r\n    };\r\n    onAddPost(post);\r\n    setTitle(\"\");\r\n    setText(\"\");\r\n    setAuthor(\"\");\r\n    setVisibility(\"public\");\r\n    setTag(\"\");\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ mt: 4 }}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n        Créer une Publication\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container spacing={2} alignItems=\"flex-end\">\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Title\"\r\n              value={title}\r\n              onChange={(event) => setTitle(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Visibilité</InputLabel>\r\n              <Select\r\n                value={visibility}\r\n                onChange={(event) => setVisibility(event.target.value)}\r\n              >\r\n                <MenuItem value=\"public\">Public</MenuItem>\r\n                <MenuItem value=\"private\">Private</MenuItem>\r\n                <MenuItem value=\"friends\">Friends</MenuItem>\r\n                <MenuItem value=\"network\">Network</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Text\"\r\n              value={text}\r\n              multiline\r\n              minRows={4}\r\n              onChange={(event) => setText(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Author\"\r\n              value={author}\r\n              onChange={(event) => setAuthor(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Tags\"\r\n              value={tag}\r\n              onChange={(event) => setTag(event.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sx={{ mt: 2 }}>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              Add Post\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\utilities\\NavBar\\CustomNavbar.jsx",[],[],"C:\\Users\\omarf\\OneDrive\\Bureau\\PROJET MIAGE 2\\Fungikey\\Branches\\Fungikey\\src\\components\\Shop\\Shop.jsx",["249"],[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":19,"column":9,"nodeType":"256","messageId":"257","endLine":19,"endColumn":17},{"ruleId":"254","severity":1,"message":"258","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":16},{"ruleId":"254","severity":1,"message":"259","line":6,"column":13,"nodeType":"256","messageId":"257","endLine":6,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":48,"column":25,"nodeType":"262","messageId":"263","endLine":48,"endColumn":27},{"ruleId":"264","severity":1,"message":"265","line":108,"column":11,"nodeType":"266","messageId":"267","endLine":111,"endColumn":12,"fix":"268"},{"ruleId":"264","severity":1,"message":"265","line":115,"column":11,"nodeType":"266","messageId":"267","endLine":118,"endColumn":12,"fix":"269"},{"ruleId":"264","severity":1,"message":"265","line":122,"column":11,"nodeType":"266","messageId":"267","endLine":125,"endColumn":12,"fix":"270"},{"ruleId":"264","severity":1,"message":"265","line":129,"column":11,"nodeType":"266","messageId":"267","endLine":129,"endColumn":79,"fix":"271"},{"ruleId":"254","severity":1,"message":"272","line":6,"column":3,"nodeType":"256","messageId":"257","endLine":6,"endColumn":6},{"ruleId":"254","severity":1,"message":"273","line":9,"column":3,"nodeType":"256","messageId":"257","endLine":9,"endColumn":12},{"ruleId":"254","severity":1,"message":"274","line":10,"column":3,"nodeType":"256","messageId":"257","endLine":10,"endColumn":14},{"ruleId":"254","severity":1,"message":"275","line":19,"column":10,"nodeType":"256","messageId":"257","endLine":19,"endColumn":20},{"ruleId":"254","severity":1,"message":"276","line":19,"column":22,"nodeType":"256","messageId":"257","endLine":19,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":26,"column":6,"nodeType":"279","endLine":26,"endColumn":8,"suggestions":"280"},{"ruleId":"254","severity":1,"message":"281","line":18,"column":10,"nodeType":"256","messageId":"257","endLine":18,"endColumn":18},{"ruleId":"254","severity":1,"message":"282","line":20,"column":7,"nodeType":"256","messageId":"257","endLine":20,"endColumn":11},{"ruleId":"254","severity":1,"message":"283","line":36,"column":17,"nodeType":"256","messageId":"257","endLine":36,"endColumn":25},{"ruleId":"254","severity":1,"message":"284","line":37,"column":21,"nodeType":"256","messageId":"257","endLine":37,"endColumn":33},{"ruleId":"254","severity":1,"message":"285","line":5,"column":10,"nodeType":"256","messageId":"257","endLine":5,"endColumn":18},{"ruleId":"254","severity":1,"message":"286","line":12,"column":8,"nodeType":"256","messageId":"257","endLine":12,"endColumn":13},{"ruleId":"277","severity":1,"message":"287","line":66,"column":6,"nodeType":"279","endLine":66,"endColumn":23,"suggestions":"288"},{"ruleId":"254","severity":1,"message":"289","line":2,"column":13,"nodeType":"256","messageId":"257","endLine":2,"endColumn":17},{"ruleId":"277","severity":1,"message":"290","line":44,"column":6,"nodeType":"279","endLine":44,"endColumn":13,"suggestions":"291"},{"ruleId":"254","severity":1,"message":"281","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":18},{"ruleId":"292","severity":1,"message":"293","line":22,"column":59,"nodeType":"294","messageId":"295","endLine":22,"endColumn":61},{"ruleId":"254","severity":1,"message":"296","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":18},{"ruleId":"254","severity":1,"message":"297","line":12,"column":3,"nodeType":"256","messageId":"257","endLine":12,"endColumn":9},{"ruleId":"254","severity":1,"message":"298","line":1,"column":27,"nodeType":"256","messageId":"257","endLine":1,"endColumn":36},{"ruleId":"254","severity":1,"message":"299","line":19,"column":10,"nodeType":"256","messageId":"257","endLine":19,"endColumn":15},"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'JSONDATA' is defined but never used.","'ioCons' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"302","text":"303"},{"range":"304","text":"303"},{"range":"305","text":"303"},{"range":"306","text":"303"},"'Nav' is defined but never used.","'Offcanvas' is defined but never used.","'NavDropdown' is defined but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["307"],"'useState' is defined but never used.","'Demo' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setSecondary' is assigned a value but never used.","'useTheme' is defined but never used.","'Popup' is defined but never used.","React Hook useEffect has missing dependencies: 'userLocation.lat' and 'userLocation.lng'. Either include them or remove the dependency array.",["308"],"'data' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'dataa'. Either exclude it or remove the dependency array.",["309"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Typography' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[3470,3470]," rel=\"noreferrer\"",[3672,3672],[3880,3880],[4045,4045],{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [params.id]",{"range":"316","text":"317"},"Update the dependencies array to be: [locationFetched, userLocation.lat, userLocation.lng]",{"range":"318","text":"319"},"Update the dependencies array to be: []",{"range":"320","text":"321"},[627,629],"[params.id]",[2069,2086],"[locationFetched, userLocation.lat, userLocation.lng]",[1639,1646],"[]"]